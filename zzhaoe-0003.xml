<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="default.xsl"?>
<fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="true"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>266</fr:anchor><fr:addr
type="user">zzhaoe-0003</fr:addr><fr:route>zzhaoe-0003.xml</fr:route><fr:title
text="Publications">Publications</fr:title><fr:date><fr:year>2024</fr:year><fr:month>8</fr:month><fr:day>5</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="ericczhao.xml"
addr="ericczhao"
title="Eric Zhao">Eric Zhao</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:tree
toc="false"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>268</fr:anchor><fr:addr
type="user">zhao-et-al-2024</fr:addr><fr:route>zhao-et-al-2024.xml</fr:route><fr:title
text="Total Type Error Localization and Recovery with Holes">Total Type Error Localization and Recovery with Holes</fr:title><fr:taxon>Reference</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>1</fr:month><fr:day>5</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="ericczhao.xml"
addr="ericczhao"
title="Eric Zhao">Eric Zhao</fr:link></fr:author><fr:author><fr:link
type="local"
href="raefmaroof.xml"
addr="raefmaroof"
title="Raef Maroof">Raef Maroof</fr:link></fr:author><fr:author><fr:link
type="local"
href="ananddukkipati.xml"
addr="ananddukkipati"
title="Anand Dukkipati">Anand Dukkipati</fr:link></fr:author><fr:author><fr:link
type="local"
href="andrewblinn.xml"
addr="andrewblinn"
title="Andrew Blinn">Andrew Blinn</fr:link></fr:author><fr:author><fr:link
type="local"
href="zhiyipan.xml"
addr="zhiyipan"
title="Zhiyi Pan">Zhiyi Pan</fr:link></fr:author><fr:author><fr:link
type="local"
href="cyrusomar.xml"
addr="cyrusomar"
title="Cyrus Omar">Cyrus Omar</fr:link></fr:author></fr:authors><fr:meta
name="doi">10.1145/3632910</fr:meta><fr:meta
name="venue"><fr:link
type="local"
href="popl-2024.xml"
addr="popl-2024"
title="POPL 2024">POPL 2024</fr:link></fr:meta></fr:frontmatter><fr:mainmatter><fr:p>Type systems typically only define the conditions under which an expression is well-typed, leaving ill-typed expressions formally meaningless. This approach is insufficient as the basis for language servers driving modern programming environments, which are expected to recover from simultaneously localized errors and continue to provide a variety of downstream semantic services. This paper addresses this problem, contributing the first comprehensive formal account of total type error localization and recovery: the marked lambda calculus. In particular, we define a gradual type system for expressions with marked errors, which operate as non-empty holes, together with a total procedure for marking arbitrary unmarked expressions. We mechanize the metatheory of the marked lambda calculus in Agda and implement it, scaled up, as the new basis for <fr:link
type="local"
href="zzhaoe-000A.xml"
addr="zzhaoe-000A"
title="Hazel">Hazel</fr:link>, a full-scale live functional programming environment with, uniquely, no meaningless editor states.</fr:p><fr:p>The marked lambda calculus is bidirectionally typed, so localization decisions are systematically predictable based on a local flow of typing information. Constraint-based type inference can bring more distant information to bear in discovering inconsistencies but this notoriously complicates error localization. We approach this problem by deploying constraint solving as a type-hole-filling layer atop this gradual bidirectionally typed core. Errors arising from inconsistent unification constraints are localized exclusively to type and expression holes, i.e. the system identifies unfillable holes using a system of traced provenances, rather than localized in an ad hoc manner to particular expressions. The user can then interactively shift these errors to particular downstream expressions by selecting from suggested partially consistent type hole fillings, which returns control back to the bidirectional system. We implement this type hole inference system in <fr:link
type="local"
href="zzhaoe-000A.xml"
addr="zzhaoe-000A"
title="Hazel">Hazel</fr:link>.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree></fr:mainmatter><fr:backmatter><fr:tree
toc="false"
numbered="false"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:title
text="Context">Context</fr:title><fr:authors /></fr:frontmatter><fr:mainmatter><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="true"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>275</fr:anchor><fr:addr
type="user">zzhaoe-0001</fr:addr><fr:route>index.xml</fr:route><fr:title
text="Home">Home</fr:title><fr:authors><fr:author><fr:link
type="local"
href="ericczhao.xml"
addr="ericczhao"
title="Eric Zhao">Eric Zhao</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Hello. I'm an incoming first year PhD student in Computer Science at <fr:link
type="local"
href="brownuniversity.xml"
addr="brownuniversity"
title="Brown University">Brown University</fr:link>, advised by <fr:link
type="local"
href="nikosvasilakis.xml"
addr="nikosvasilakis"
title="Nikos Vasilakis">Nikos Vasilakis</fr:link> and <fr:link
type="local"
href="robertlewis.xml"
addr="robertlewis"
title="Robert Lewis">Robert Lewis</fr:link>. My interests are in programming languages, especially type theory, proof assistants, and formal verification. Previously, I was an undergraduate in computer science at <fr:link
type="local"
href="umich.xml"
addr="umich"
title="The University of Michigan">The University of Michigan</fr:link>, where I worked with <fr:link
type="local"
href="cyrusomar.xml"
addr="cyrusomar"
title="Cyrus Omar">Cyrus Omar</fr:link> in the <fr:link
type="local"
href="fplab.xml"
addr="fplab"
title="Future of Programming Lab">Future of Programming Lab</fr:link>.</fr:p><fr:p>I am also supported by the NSF Graduate Research Fellowship.</fr:p>
  

  <fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>277</fr:anchor><fr:addr
type="user">zzhaoe-0003</fr:addr><fr:route>zzhaoe-0003.xml</fr:route><fr:title
text="Publications">Publications</fr:title><fr:date><fr:year>2024</fr:year><fr:month>8</fr:month><fr:day>5</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="ericczhao.xml"
addr="ericczhao"
title="Eric Zhao">Eric Zhao</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:tree
toc="false"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>268</fr:anchor><fr:addr
type="user">zhao-et-al-2024</fr:addr><fr:route>zhao-et-al-2024.xml</fr:route><fr:title
text="Total Type Error Localization and Recovery with Holes">Total Type Error Localization and Recovery with Holes</fr:title><fr:taxon>Reference</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>1</fr:month><fr:day>5</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="ericczhao.xml"
addr="ericczhao"
title="Eric Zhao">Eric Zhao</fr:link></fr:author><fr:author><fr:link
type="local"
href="raefmaroof.xml"
addr="raefmaroof"
title="Raef Maroof">Raef Maroof</fr:link></fr:author><fr:author><fr:link
type="local"
href="ananddukkipati.xml"
addr="ananddukkipati"
title="Anand Dukkipati">Anand Dukkipati</fr:link></fr:author><fr:author><fr:link
type="local"
href="andrewblinn.xml"
addr="andrewblinn"
title="Andrew Blinn">Andrew Blinn</fr:link></fr:author><fr:author><fr:link
type="local"
href="zhiyipan.xml"
addr="zhiyipan"
title="Zhiyi Pan">Zhiyi Pan</fr:link></fr:author><fr:author><fr:link
type="local"
href="cyrusomar.xml"
addr="cyrusomar"
title="Cyrus Omar">Cyrus Omar</fr:link></fr:author></fr:authors><fr:meta
name="doi">10.1145/3632910</fr:meta><fr:meta
name="venue"><fr:link
type="local"
href="popl-2024.xml"
addr="popl-2024"
title="POPL 2024">POPL 2024</fr:link></fr:meta></fr:frontmatter><fr:mainmatter><fr:p>Type systems typically only define the conditions under which an expression is well-typed, leaving ill-typed expressions formally meaningless. This approach is insufficient as the basis for language servers driving modern programming environments, which are expected to recover from simultaneously localized errors and continue to provide a variety of downstream semantic services. This paper addresses this problem, contributing the first comprehensive formal account of total type error localization and recovery: the marked lambda calculus. In particular, we define a gradual type system for expressions with marked errors, which operate as non-empty holes, together with a total procedure for marking arbitrary unmarked expressions. We mechanize the metatheory of the marked lambda calculus in Agda and implement it, scaled up, as the new basis for <fr:link
type="local"
href="zzhaoe-000A.xml"
addr="zzhaoe-000A"
title="Hazel">Hazel</fr:link>, a full-scale live functional programming environment with, uniquely, no meaningless editor states.</fr:p><fr:p>The marked lambda calculus is bidirectionally typed, so localization decisions are systematically predictable based on a local flow of typing information. Constraint-based type inference can bring more distant information to bear in discovering inconsistencies but this notoriously complicates error localization. We approach this problem by deploying constraint solving as a type-hole-filling layer atop this gradual bidirectionally typed core. Errors arising from inconsistent unification constraints are localized exclusively to type and expression holes, i.e. the system identifies unfillable holes using a system of traced provenances, rather than localized in an ad hoc manner to particular expressions. The user can then interactively shift these errors to particular downstream expressions by selecting from suggested partially consistent type hole fillings, which returns control back to the bidirectional system. We implement this type hole inference system in <fr:link
type="local"
href="zzhaoe-000A.xml"
addr="zzhaoe-000A"
title="Hazel">Hazel</fr:link>.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree></fr:mainmatter><fr:backmatter /></fr:tree>
  <fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>279</fr:anchor><fr:addr
type="user">zzhaoe-0002</fr:addr><fr:route>zzhaoe-0002.xml</fr:route><fr:title
text="Software">Software</fr:title><fr:date><fr:year>2024</fr:year><fr:month>8</fr:month><fr:day>5</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="ericczhao.xml"
addr="ericczhao"
title="Eric Zhao">Eric Zhao</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>247</fr:anchor><fr:addr
type="user">zzhaoe-0005</fr:addr><fr:route>zzhaoe-0005.xml</fr:route><fr:title
text="Ongoing software">Ongoing software</fr:title><fr:date><fr:year>2024</fr:year><fr:month>8</fr:month><fr:day>5</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="ericczhao.xml"
addr="ericczhao"
title="Eric Zhao">Eric Zhao</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Software today and now! (varying degrees of contribution and triviality).</fr:p><fr:tree
toc="false"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>249</fr:anchor><fr:addr
type="user">zzhaoe-0007</fr:addr><fr:route>zzhaoe-0007.xml</fr:route><fr:title
text="Dotfiles">Dotfiles</fr:title><fr:taxon>Software</fr:taxon><fr:authors><fr:author><fr:link
type="local"
href="ericczhao.xml"
addr="ericczhao"
title="Eric Zhao">Eric Zhao</fr:link></fr:author></fr:authors><fr:meta
name="external">https://github.com/mirryi/dotfiles</fr:meta></fr:frontmatter><fr:mainmatter /><fr:backmatter /></fr:tree></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>251</fr:anchor><fr:addr
type="user">zzhaoe-0006</fr:addr><fr:route>zzhaoe-0006.xml</fr:route><fr:title
text="Past software">Past software</fr:title><fr:date><fr:year>2024</fr:year><fr:month>8</fr:month><fr:day>5</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="ericczhao.xml"
addr="ericczhao"
title="Eric Zhao">Eric Zhao</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Software I worked on in the past.</fr:p><fr:tree
toc="false"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>253</fr:anchor><fr:addr
type="user">zzhaoe-000A</fr:addr><fr:route>zzhaoe-000A.xml</fr:route><fr:title
text="Hazel">Hazel</fr:title><fr:taxon>Software</fr:taxon><fr:authors /><fr:meta
name="external">https://hazel.org</fr:meta><fr:meta
name="external">https://github.com/hazelgrove/hazel</fr:meta></fr:frontmatter><fr:mainmatter><fr:blockquote>Hazel is a live functional programming environment that is able to typecheck, manipulate, and even run incomplete programs, i.e. programs with holes. There are no meaningless editor states.</fr:blockquote></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="false"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>254</fr:anchor><fr:addr
type="user">zzhaoe-000B</fr:addr><fr:route>zzhaoe-000B.xml</fr:route><fr:title
text="Total Type Error Localization and Recovery with Holes (Agda)">Total Type Error Localization and Recovery with Holes (Agda)</fr:title><fr:taxon>Software</fr:taxon><fr:authors><fr:author><fr:link
type="local"
href="ericczhao.xml"
addr="ericczhao"
title="Eric Zhao">Eric Zhao</fr:link></fr:author></fr:authors><fr:meta
name="external">https://github.com/hazelgrove/error-localization-agda</fr:meta></fr:frontmatter><fr:mainmatter><fr:p>An Agda mechanization of the marked lambda calculus, a judgmental framework for bidirectional type error localization and recovery described in <fr:link
type="local"
href="zhao-et-al-2024.xml"
addr="zhao-et-al-2024"
title="Total Type Error Localization and Recovery with Holes">Total Type Error Localization and Recovery with Holes</fr:link>.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>256</fr:anchor><fr:addr
type="user">zzhaoe-0004</fr:addr><fr:route>zzhaoe-0004.xml</fr:route><fr:title
text="Archived software">Archived software</fr:title><fr:date><fr:year>2024</fr:year><fr:month>8</fr:month><fr:day>5</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="ericczhao.xml"
addr="ericczhao"
title="Eric Zhao">Eric Zhao</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>There's some software that I've written over the years that I'd considered 'archived' at this point.</fr:p><fr:tree
toc="false"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>241</fr:anchor><fr:addr
type="user">zzhaoe-0008</fr:addr><fr:route>zzhaoe-0008.xml</fr:route><fr:title
text="Wikichan">Wikichan</fr:title><fr:taxon>Software</fr:taxon><fr:authors><fr:author><fr:link
type="local"
href="ericczhao.xml"
addr="ericczhao"
title="Eric Zhao">Eric Zhao</fr:link></fr:author></fr:authors><fr:meta
name="external">https://github.com/mirryi/wikichan</fr:meta></fr:frontmatter><fr:mainmatter><fr:p>Wikichan is a browser extension that displays a popup with information from Wikipedia and other sources when hovering over text on any page. Its development (2018 -- 2020?) was mainly during high school (and therefore a bloody mess) and is on indefinite hiatus. I'd like to return to it at some point, however.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="false"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>243</fr:anchor><fr:addr
type="user">zzhaoe-0009</fr:addr><fr:route>zzhaoe-0009.xml</fr:route><fr:title
text="Shelf">Shelf</fr:title><fr:taxon>Software</fr:taxon><fr:authors><fr:author><fr:link
type="local"
href="ericczhao.xml"
addr="ericczhao"
title="Eric Zhao">Eric Zhao</fr:link></fr:author></fr:authors><fr:meta
name="external">https://github.com/mirryi/shelf</fr:meta></fr:frontmatter><fr:mainmatter><fr:p>A symlink farm manager in the spirit of GNU stow, meant primarily for dotfiles. Though I still use it for <fr:link
type="external"
href="dotfiles">my own configurations</fr:link>, it's pretty awful, so I wouldn't recommend it to anyone at all. At some point, I'd like to build a robust and intelligent tool for these purposes.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree></fr:mainmatter><fr:backmatter /></fr:tree></fr:mainmatter><fr:backmatter /></fr:tree>
</fr:mainmatter><fr:backmatter /></fr:tree></fr:mainmatter><fr:backmatter /></fr:tree></fr:backmatter></fr:tree>